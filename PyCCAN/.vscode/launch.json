{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            "name": "Python: DefaultGenerator",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}",
            "program": "${env:CCAN}/bin/ccan_generator",
            "console": "internalConsole"  ,          
            "stopOnEntry": false   
        },

        {
            "name": "Python: Updater Download G474RE Bootloader",
            "type": "debugpy",
            "request": "launch",
            "program": "${env:CCAN}/bin/ccan_cli",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "args": [
                "--verbose","controller","399",
                "--update","/home/christoph/CCAN/boards/mbed_applications/cmake_build/NUCLEO_G474RE_UPDATER/develop/GCC_ARM/ccan_bootloader_updater.hex",      
            ]
        },

        
        {
            "name": "Python: Download G474RE Bootloader",
            "type": "debugpy",
            "request": "launch",
            "program": "${env:CCAN}/bin/ccan_cli",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "args": [
                "--verbose","controller","399",
                "--update","/home/christoph/CCAN/boards/mbed_applications/cmake_build/NUCLEO_G474RE_BOOTLOADER/release/GCC_ARM/ccan_bootloader.hex",      
            ]
        },

        {
            "name": "Python: Download configuration (LPC4088)",
            "type": "debugpy",
            "request": "launch",
            "program": "${env:CCAN}/bin/ccan_cli",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "args": [
                "--verbose","controller","350",
                "--overwrite","/home/christoph/CCAN/test/gen/config_embedded_lpc4088ip_ENGINE_CONFIG.bin",      
            ]
        },

        {
            "name": "Python: Download configuration (Nucleo G474RE)",
            "type": "debugpy",
            "request": "launch",
            "program": "${env:CCAN}/bin/ccan_cli",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "args": [
                "--verbose","controller","1024",
                "--update","/home/christoph/CCAN/test/gen/config_embedded_g474re_ENGINE_CONFIG.bin"
            ]
        },

        {
            "name": "Python: Download firmware (g474re / release)",
            "type": "debugpy",
            "request": "launch",
            "program": "${env:CCAN}/bin/ccan_cli",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "args": [
                "--verbose",
                "--port","6020",
                "controller","203",
                "--update","/home/christoph/CCAN/boards/mbed_applications/cmake_build/NUCLEO_G474RE_FIRMWARE/release/GCC_ARM/ccan_firmware.hex"
            ]
        },


        {
            "name": "Python: Download firmware (lpc4088)",
            "type": "debugpy",
            "request": "launch",
            "program": "${env:CCAN}/bin/ccan_cli",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "args": [
                "--verbose","controller","350",
                "--update","/home/christoph/CCAN/boards/lpc4088/build/ccan_firmware_debug.hex"
            ]
        },

        {
            "name": "Python: Nucleo Download",
            "type": "debugpy",
            "request": "launch",
            "program": "${env:CCAN}/bin/ccan_cli",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "args": [
                "controller","351",
                "--download","/home/christoph/CCAN/test/gen/config_embedded_g474re_ENGINE_CONFIG.bin",           
              
            ]
        },
   
        {
            "name": "[PRODUCTION] Python: Update Automation EG_Plus2",
            "type": "debugpy",
            "request": "launch",
            "program": "${env:CCAN}/bin/ccan_cli",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "args": [
                "a",
                "--update","EG_Plus2",           
              
            ]
        },

        {
            "name": "Python: Dump",
            "type": "debugpy",
            "request": "launch",
            "program": "${env:CCAN}/bin/ccan_cli",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "args": [          
                "--ip_address","localhost",
                  "a","config_embedded",
                "--dump"
            ]
        },

        {
            "name": "[PRODUCTION] Python: Dump",
            "type": "debugpy",
            "request": "launch",
            "program": "${env:CCAN}/bin/ccan_cli",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "args": [   
                "a",
                "--dump"
            ]
        },

        {
            "name": "Python: Broadcast PING",
            "type": "debugpy",
            "request": "launch",
            "program": "${env:CCAN}/bin/ccan_cli",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "args": [          
                "broadcast",
                "--ping"
            ]
        },

        {
            "name": "Python: Broadcast BoardInfo (UUID)",
            "type": "debugpy",
            "request": "launch",
            "program": "${env:CCAN}/bin/ccan_cli",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "args": [          
                "broadcast",
                "-b"
            ]
        },


        {
            "name": "Python: Automation ConfigurationInfo",
            "type": "debugpy",
            "request": "launch",
            "program": "${env:CCAN}/bin/ccan_cli",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "args": [          
               "a", "-c"
            ]
        },

        {
            "name": "Python: Debugging Trigger Temperature Measurement",
            "type": "debugpy",
            "request": "launch",
            "program": "${env:CCAN}/bin/ccan_cli",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "args": [    
                "--ip_address","localhost","--port","6005",
               "c","351","--ds1820_trigger_measurement","0"," 0x7f00000a47828a28"
            ]
        },

        {
            "name": "Python: Debugging Read Temperature Measurement",
            "type": "debugpy",
            "request": "launch",
            "program": "${env:CCAN}/bin/ccan_cli",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "args": [    
                "--ip_address","localhost","--port","6005",
               "c","351","--ds1820_read_measurement","0","0x7f00000a47828a28"
            ]
        },

        {
            "name": "Python: Debugging Set Read Timings for Measurement",
            "type": "debugpy",
            "request": "launch",
            "program": "${env:CCAN}/bin/ccan_cli",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "args": [    
                "--ip_address","localhost","--port","6005",
               "c","351","--ds1820_set_read_timings","1","10","50","5"
            ]
        },

        {
            "name": "Python: TEST ccan_cli dump test_template_heating",
            "type": "debugpy",
            "request": "launch",
            "program": "${env:CCAN}/bin/ccan_cli",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "args": [  
                "--ip_address","localhost","--port","6005","a","config_test_template_heating","-d"
              ]
        },

        {
            "name": "Python: ccan_cli a -d",
            "type": "debugpy",
            "request": "launch",
            "program": "${env:CCAN}/bin/ccan_cli",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "args": [  
                "a","-d"
              ]
        },

        {
            "name": "Python: ccan_log",
            "type": "debugpy",
            "request": "launch",
            "program": "${env:CCAN}/bin/ccan_cli",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "args": [  
                "a","--create_log","file"

            ]
        },

        {
            "name": "Python: Ping",
            "type": "debugpy",
            "request": "launch",
            "program": "${env:CCAN}/bin/ccan_cli",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "args": [          
                "c", "200",         
                "--ping"
            ]
        },

        {
            "name": "Python: Short Info Config",
            "type": "debugpy",
            "request": "launch",
            "program": "${env:CCAN}/bin/ccan_cli",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "args": [          
                "--ip_address","localhost","c", "201",      "-c"                 
            ]
        },

        {
            "name": "Python: Broadcast Short Info Config",
            "type": "debugpy",
            "request": "launch",
            "program": "${env:CCAN}/bin/ccan_cli",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "args": [          
                "b",         
                "--config_info"
            ]
        },


        {
            "name": "Python: Playground MQTT Connect",
            "type": "debugpy",
            "request": "launch",
            "program": "${env:CCAN}/playground/python/mqtt_connect.py",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "args": [          
           
        ]
        },

        {
            "name": "Python: Playground MQTT Publish",
            "type": "debugpy",
            "request": "launch",
            "program": "${env:CCAN}/playground/python/publish.py",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "args": [          
           
        ]
        },

        {
            "name": "Python: Set ALARM status LED",
            "type": "debugpy",
            "request": "launch",
            "program": "${env:CCAN}/bin/ccan_cli",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "args": [          
                "c","351",
                "--set_board_led","ALARM","ON"
            ]
        },


        {
            "name": "Python: Detect DS18x20 on NucleoG474RE",
            "type": "debugpy",
            "request": "launch",
            "program": "${env:CCAN}/bin/ccan_cli",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "args": [
                "controller","351",
                "--detect_ds1820","1"

            ]
        },

        {
            "name": "Python: Detect MCP Expander on NucleoG474RE",
            "type": "debugpy",
            "request": "launch",
            "program": "${env:CCAN}/bin/ccan_cli",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "args": [
                "controller","351",
                "--detect_expander"

            ]
        },

        {
            "name": "[PRODUCTION] Python: Update (Configuration)",
            "type": "debugpy",
            "request": "launch",
            "program": "${env:CCAN}/bin/ccan_cli",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "args": [             
                "a",
                "--update"

            ]
        },

        {
            "name": "Python: Intialize IO_Expander on NucleoG474RE",
            "type": "debugpy",
            "request": "launch",
            "program": "${env:CCAN}/bin/ccan_cli",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "args": [
                "controller","351",
                "--initialize_expander32","3","Hallo","INPUT_EXPANDER32"
            ]
        },

        {
            "name": "Python: PING NucleoG474RE",
            "type": "debugpy",
            "request": "launch",
            "program": "${env:CCAN}/bin/ccan_cli",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "args": [          
                "controller","351",
                "--ping"
            ]
        },



        {
            "name": "Python: ping (EG extended)",
            "type": "debugpy",
            "request": "launch",
            "program": "${env:CCAN}/bin/ccan_cli",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "args": [              
                "--port","-1",
                "c","200",
                "--ping"
            ]
        },

        {
            "name": "Python: send event (EG_Plus)",
            "type": "debugpy",
            "request": "launch",
            "program": "${env:CCAN}/bin/ccan_cli",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "args": [              
                "a","EG_Plus","--send_event"              ,
                "'DEV Taster_LinksObenTuer_Deckenleuchten_Ankleide::PRESSED()'"
            ]
        },


        {
            "name": "PRODUCTION: update CCAN network with EG_V2",
            "type": "debugpy",
            "request": "launch",       
            "env": {"PYTHONPATH": "${workspaceFolder}:${env:PYTHONPATH}"},
            //"python": "${workspaceFolder}/" ,
            "cwd":     "${workspaceFolder}/",  
            "program": "${env:CCAN}/bin/ccan_cli",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "args": [
               "a","--update","EG_V2"
            ]
        },


        {
            "name": "Python: compile Template HA Integration Schmitt Trigger",
            "type": "debugpy",
            "request": "launch",       
            "env": {"PYTHONPATH": "${workspaceFolder}:${env:PYTHONPATH}"},
            //"python": "${workspaceFolder}/" ,
            "cwd":     "${workspaceFolder}/",  
            "program": "${env:CCAN}/bin/ccan_compile",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "args": [
                "${workspaceFolder}/../test/py/config/home_assistant/config_template_HA_Integration",
                "-o","${workspaceFolder}/../test/gen",
                "--text_output",
            ]
        },

        {
            "name": "Python: compile two_button_shutter_test",
            "type": "debugpy",
            "request": "launch",       
            "env": {"PYTHONPATH": "${workspaceFolder}:${env:PYTHONPATH}"},
            //"python": "${workspaceFolder}/" ,
            "cwd":     "${workspaceFolder}/",  
            "program": "${env:CCAN}/bin/ccan_compile",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "args": [
                "${workspaceFolder}/../test/py/config/config_two_button_shutter_test",
                "-o","${workspaceFolder}/../test/gen",
                "--text_output",
            ]
        },

        {
            "name": "Python: compile two button shutter connected",
            "type": "debugpy",
            "request": "launch",       
            "env": {"PYTHONPATH": "${workspaceFolder}:${env:PYTHONPATH}"},
            //"python": "${workspaceFolder}/" ,
            "cwd":     "${workspaceFolder}/",  
            "program": "${env:CCAN}/bin/ccan_compile",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "args": [
                "${CCAN}/test/py/config/config_test_template_two_button_shutter_connected",
                "-o","${CCAN}/test/gen",
                "-i","${CCAN}/test/py/config",
                "--text_output",
            ]
        },

        {
            "name": "Python: compile TEST config_HA_Integration",
            "type": "debugpy",
            "request": "launch",       
            "env": {"PYTHONPATH": "${workspaceFolder}:${env:PYTHONPATH}"},
            //"python": "${workspaceFolder}/" ,
            "cwd":     "${workspaceFolder}/",  
            "program": "${env:CCAN}/bin/ccan_compile",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "args": [
                "${CCAN}/test/py/config/home_assistant/config_HA_Integration.ccan",
                "-o","${CCAN}/test/gen",
                "-i","${CCAN}/test/py/config",
                "--text_output",
            ]
        },


        {
            "name": "Python: compile TEST Multiple Shadow Variables",
            "type": "debugpy",
            "request": "launch",       
            "env": {"PYTHONPATH": "${workspaceFolder}:${env:PYTHONPATH}"},
            //"python": "${workspaceFolder}/" ,
            "cwd":     "${workspaceFolder}/",  
            "program": "${env:CCAN}/bin/ccan_compile",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "args": [
                "${CCAN}/test/py/config/config_multiple_shadow_variables.ccan",
                "-o","${CCAN}/test/gen",
                "-i","${CCAN}/test/py/config",
                "--text_output",
            ]
        },


        {
            "name": "Python: compile test_config_HeatingLogical",
            "type": "debugpy",
            "request": "launch",       
            "env": {"PYTHONPATH": "${workspaceFolder}:${env:PYTHONPATH}"},
            //"python": "${workspaceFolder}/" ,
            "cwd":     "${workspaceFolder}/",  
            "program": "${env:CCAN}/bin/ccan_compile",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "args": [
                "${CCAN}/test/py/config/templates/config_test_template_heating",
                "-o","${CCAN}/test/gen",
                "-i","${CCAN}/test/py/config",
                "--text_output",
            ]
        },

        {
            "name": "Python: compile embedded configuration",
            "type": "debugpy",
            "request": "launch",       
            "env": {"PYTHONPATH": "${workspaceFolder}:${env:PYTHONPATH}"},
            //"python": "${workspaceFolder}/" ,
            "cwd":     "${workspaceFolder}/",  
            "program": "${env:CCAN}/bin/ccan_compile",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "args": [
                "${CCAN}/test/py/config/config_embedded",
                "-o","${CCAN}/test/gen",
                "-i","${CCAN}/test/py/config",
                "--text_output",
            ]
        },

        {
            "name": "Python: compile alias and variables",
            "type": "debugpy",
            "request": "launch",       
            "env": {"PYTHONPATH": "${workspaceFolder}:${env:PYTHONPATH}"},
            //"python": "${workspaceFolder}/" ,
            "cwd":     "${workspaceFolder}/",  
            "program": "${env:CCAN}/bin/ccan_compile",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "args": [
                "${workspaceFolder}/../test/py/config/config_test_alias_and_variables",
                "-o","${workspaceFolder}/../test/gen",
                "--text_output",
            ]
        },


        {
            "name": "Python: compile test Template",
            "type": "debugpy",
            "request": "launch",       
            "env": {"PYTHONPATH": "${workspaceFolder}:${env:PYTHONPATH}"},
            //"python": "${workspaceFolder}/" ,
            "cwd":     "${workspaceFolder}/",  
            "program": "${env:CCAN}/bin/ccan_compile",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "args": [
                "${workspaceFolder}/../test/py/config/config_test_template",
                "-o","${workspaceFolder}/../test/gen",
                "--text_output",
            ]
        },



        {
            "name": "Python: Compiler bootloader default config",
            "type": "debugpy",
            "request": "launch",       
            "env": {"PYTHONPATH": "${workspaceFolder}:${env:PYTHONPATH}"},
            //"python": "${workspaceFolder}/" ,
            "cwd":     "${workspaceFolder}/",  
            "program": "${env:CCAN}/bin/ccan_cli",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "args": [
                "${workspaceFolder}/../boards/nucleo_f429zi/config/bootloader_default_config",
                "-o","${workspaceFolder}/../boards/nucleo_f429zi/config",
                "--text_output",
            ]
        },

        {
            "name": "Python: PyTest CCAN Compiler",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/../test/",
            "module": "pytest",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "args": [ "-s","${workspaceFolder}/../test/py/test_Compiler.py"          ] // "-s" -> verbose Ausgabe von pytest
        },        

        {
            "name": "Python: PyTest Embedded Setup",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/../test/",
            "module": "pytest",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "args": [ "-s","${workspaceFolder}/../test/py/test_embedded_setup.py"]
        },

        {
            "name": "Python: PyTest Application Events",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/../test/",
            "module": "pytest",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "args": [ "-s","${workspaceFolder}/../test/py/pc/test_ApplicationEvents.py"]
        },

        {
            "name": "Python: PyTest PowerSupplyLogical",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/../test/",
            "module": "pytest",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "args": [ "-s","${workspaceFolder}/../test/py/pc/templates/test_PowerSupplyLogical.py"]
        },

        {
            "name": "Python: PyTest Standard Devices",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/../test/",
            "module": "pytest",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "args": [ "-s","${workspaceFolder}/../test/py/pc/devices/test_StandardDevices.py"]
        },

        {
            "name": "Python: PyTest error suite",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/../test/",
            "module": "pytest",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "args": [ "-s","${workspaceFolder}/../test/py/pc/test_error_suite.py::test_event_parameter_in_from_event"]
        },
        
        {
            "name": "Python: PyTest cogging",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/../test/",
            "module": "pytest",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "args": [ "-s","${workspaceFolder}/../test/py/pc/test_cog_generate_code.py"          ] // "-s" -> verbose Ausgabe von pytest
        },

        {
            "name": "Python: PyTest UDP Server",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/../test/",
            "program": "${env:CCAN}/bin/ccan_connect",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "args": [ "-v","WARN" ]
        },

        {
            "name": "Python: GET variable from G474RE",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/../test/",
            "program": "${env:CCAN}/bin/ccan_cli",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "args": ["a","--get_variable", ""        ] // "-s" -> verbose Ausgabe von pytest
        },

        {
            "name": "Python: SET variable from G474RE",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/../test/",
            "program": "${env:CCAN}/bin/ccan_cli",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "args": ["a","--set_variable", "Steckdose_Wohnzimmer::STATUS","True" ] // "-s" -> verbose Ausgabe von pytest        },
        },

        {
            "name": "Python: show degradation status",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/../test/",
            "program": "${env:CCAN}/bin/ccan_cli",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "args": ["a","/home/christoph/CCAN/test/gen/config_embedded" ,"--show_degradation_status" ] // "-s" -> verbose Ausgabe von pytest
        },


        {
            "name": "Python: PRODUCTION show degradation status",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/../test/",
            "program": "${env:CCAN}/bin/ccan_cli",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "args": ["a","--degradation_status" ] // "-s" -> verbose Ausgabe von pytest
        },

        {
            "name": "Python: PRODUCTION Compiler EG.ccan",
            "type": "debugpy",
            "request": "launch",
            "cwd":     "${workspaceFolder}/src",
            "program": "${env:CCAN}/bin/ccan_compile",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "args": [
                "${env:CCAN}/production/config/EG",
                "-o", "${env:CCAN}/production/gen/EG",
                "--text_output",
            ]
        },

        {
            "name": "Python: PRODUCTION Compiler EG_Plus.ccan",
            "type": "debugpy",
            "request": "launch",
            "cwd":     "${workspaceFolder}/src",
            "program": "${env:CCAN}/bin/ccan_compile",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "args": [
                "${env:CCAN}/production/config/EG_Plus",
                "-o", "${env:CCAN}/production/gen/EG_Plus",
                "--text_output",
            ]
        },

        {
            "name": "[PRODUCTION] Python: Compiler EG_Plus2.ccan",
            "type": "debugpy",
            "request": "launch",
            "cwd":     "${workspaceFolder}/src",
            "program": "${env:CCAN}/bin/ccan_compile",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "args": [
                "${env:CCAN}/production/config/EG_Plus2",
                "-o", "${env:CCAN}/production/gen/EG_Plus2",
                "--text_output",
            ]
        },

        {
            "name": "[PRODUCTION] Python: Compiler EG_V2",
            "type": "debugpy",
            "request": "launch",
            "cwd":     "${workspaceFolder}/src",
            "program": "${env:CCAN}/bin/ccan_compile",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "args": [
                "${env:CCAN}/production/config/EG_V2",
                "-o", "${env:CCAN}/production/gen/EG_V2",
                "--text_output",
            ]
        },



        {
            "name": "Python: TEST Compiler config_EG",
            "type": "debugpy",
            "request": "launch",
            "cwd":     "${workspaceFolder}/src",
            "program": "${env:CCAN}/bin/ccan_compile",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "args": [
                "${env:CCAN}/test/py/config/config_EG",
                "-o", "${env:CCAN}/test/gen/",
                "--text_output",
            ]
        },



        {
            "name": "Python: compile TemplateHeating",
            "type": "debugpy",
            "request": "launch",
            "program": "${env:CCAN}/bin/ccan_compile",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "justMyCode": false,
            "args": [
                "${workspaceFolder}/../test/py/config/templates/config_test_template_heating",
                "-o","${workspaceFolder}/gen",
                "--text_output",
            ]
        },

        {
            "name": "Python: compile syntex error - comma",
            "type": "debugpy",
            "request": "launch",
            "program": "${env:CCAN}/bin/ccan_compile",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "justMyCode": false,
            "args": [
                "${workspaceFolder}/../test/py/config/configuration_error_configs/config_comma_error",
                "-o","~",
            ]
        },

        {
            "name": "Python: compile device_test",
            "type": "debugpy",
            "request": "launch",
            "program": "${env:CCAN}/bin/ccan_compile",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "justMyCode": false,
            "args": [
                "${workspaceFolder}/../test/py/config/config_output_test",
                "-o","${workspaceFolder}/../test/gen",
                "--text_output",
            ]
        },

        {
            "name": "Python: compile ApplicationEvents Test",
            "type": "debugpy",
            "request": "launch",
            "program": "${env:CCAN}/bin/ccan_compile",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "justMyCode": false,
            "args": [
                "${workspaceFolder}/../test/py/config/config_application_events",
                "-o","${workspaceFolder}/../test/gen",
                "--text_output",
            ]
        },

        {
            "name": "Python: compile HCAN Test",
            "type": "debugpy",
            "request": "launch",
            "program": "${env:CCAN}/bin/ccan_compile",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "justMyCode": false,
            "args": [
                "${workspaceFolder}/../test/py/config/config_hcan_mapping",
                "-o","${workspaceFolder}/../test/gen",
                "--text_output",
            ]
        },


        {
            "name": "Python: compile mapping_test",
            "type": "debugpy",
            "request": "launch",
            "program": "${env:CCAN}/bin/ccan_compile",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "justMyCode": false,
            "args": [
                "${workspaceFolder}/../test/py/config/config_mapping_test_variable",
                "-o","${workspaceFolder}/../test/gen",
                "--text_output",
            ]
        },

        {
            "name": "Python: compile test_variable_mapping",
            "type": "debugpy",
            "request": "launch",
            "program": "${env:CCAN}/bin/ccan_compile",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "justMyCode": false,
            "args": [
                "${workspaceFolder}/../test/py/config/config_mapping_test_variable",
                "-o","${workspaceFolder}/../test/gen",
                "--text_output",
            ]
        },

        {
            "name": "Python: compile template_test",
            "type": "debugpy",
            "request": "launch",
            "program": "${env:CCAN}/bin/ccan_compile",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "justMyCode": false,
            "args": [
                "${workspaceFolder}/../test/py/config/config_two_button_shutter_test",
                "-o","${workspaceFolder}/../test/gen",
                "--text_output",
            ]
        },

        {
            "name": "Python: compile embedded test",
            "type": "debugpy",
            "request": "launch",
            "program": "${env:CCAN}/bin/ccan_compile",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "justMyCode": false,
            "args": [
                "${workspaceFolder}/../test/py/config/config_embedded",
                "-o","${workspaceFolder}/../test/gen",
                "--text_output",
            ]
        },

        {
            "name": "Python: compile default config",
            "type": "debugpy",
            "request": "launch",
            "program": "${env:CCAN}/bin/ccan_compile",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "justMyCode": false,
            "args": [
                "${workspaceFolder}/../boards/mbed_applications/config/default_config",
                "-o","${workspaceFolder}/../test/gen",
                "--text_output",
            ]
        },


        {
            "name": "[PRODUCTION] Python: CCAN code generation (cogging)",
            "type": "debugpy",
            "request": "launch",
            "program": "${env:CCAN}/bin/ccan_compile",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "justMyCode": false,
            "args": [       
                "${workspaceFolder}/../test/py/config/config_output_test",
                "-o","${workspaceFolder}/gen",
                "--text_output",    
                "--generate_cpp",
            ]
        },


        {
            "name": "Python: Connect",
            "type": "debugpy",
            "request": "launch",
            "program":  "${env:CCAN}/bin/ccan_connect",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "args": [ "--port","6005","-v","DEBUG"       ]
        },

        {
            "name": "Python: Expression Evaluator Test",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/src/PyCCAN_ExpressionEvaluator.py",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "args": []
        },
        {
            "name": "Python: Variable",
            "type": "debugpy",
            "request": "launch",
            "program":  "${env:CCAN}/bin/ccan_compile",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "args": [
                "${workspaceFolder}/config/variable_dev",
                "-o","${workspaceFolder}/gen",
                "--text_output",                
            ]
        },

        {
            "name": "Python: make_updater_header (lpc4088)",
            "type": "debugpy",
            "request": "launch",
            "program":  "${env:CCAN}/bin/make_updater_header",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "args": [
                "/home/christoph/CCAN/boards/lpc4088/build/ccan_bootloader_debug.hex",
                "/home/christoph/CCAN/boards/lpc4088/build/gen/bootloader.h"                     
            ]
        },

        {
            "name": "Python: make_updater_header (g474re)",
            "type": "debugpy",
            "request": "launch",
            "program":  "${env:CCAN}/bin/make_updater_header",
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "args": [
                "/home/christoph/CCAN/boards/mbed_applications/cmake_build/NUCLEO_G474RE_BOOTLOADER/release/GCC_ARM/ccan_bootloader.hex",
                "/home/christoph/CCAN/boards/mbed_applications/cmake_build/NUCLEO_G474RE_UPDATER/develop/GCC_ARM/TARGET_NUCLEO_G474RE_UPDATER/gen/bootloader.h"                     
            ]
        },

    ]
}